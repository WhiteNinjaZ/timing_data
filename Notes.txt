Need a way to go from f4pga to vtr. Average using the following method:
For every net with a given wire type solve for wire type and 


Might want to make your own experiemnt playground rr graph. 
Could do this by picking a few paths and adding up their wire types.


Surely xilinx has some kind of output that tells us how many of certain wire types and pips there are in a net. 
in other words, this is what I am made of and this is my timing. If we get something that is an average and build an rr
is it the same type of deal?


Remember that the wire names going through a CLB tile is a portion of a wire passing through that block.

This: INT_L_X4Y53/INT_L.LOGIC_OUTS_L23->>WW2BEG1 is a pip. Most things with the arrows are


vivado gives the values for the four corners. Modify the code to except an argument that figures out 
which corner we want to calculate. Default is mean of all 4. 
or
since a run takes so long just report the 4 corners along with the mean. <---The better idea

Q:
How does vtr calculate its  timing? Is it just the sum of all wire timing in a net?

A:
Switches, Wires, and ports on CLB are considered when looking at timing.

Conversion:
Switches:
Cout = downstream C
Cin = CAP
R = RES
Tdel = 4 corners (which one or mean?)

Wires: 
Rmetal = Res/unit length
Cmetal = Cap/unit length
